- name: 创建存放代码的目录
  file:
    path: /datas/resource/opencart2/
    state: directory
    mode: 0777
    recurse: yes

- name: 当load_data_online为yes的时候,线上下载安装包
  get_url:
    validate_certs: no
    url: "{{ cms_download_url }}"
    dest: /datas/resource/opencart2/
    mode: 0755
    force: "{{ update_resource }}"
  when: load_data_online == 'yes'

- name: 当load_data_online为no的时候,上传安装包
  copy:
    src: "files/{{ cms_file_name }}"
    dest: /datas/resource/opencart2/
    mode: 0777
    force: "{{ update_resource }}"
  when: load_data_online == 'no'

- name: 解压下载tar包
  unarchive:
    src: "/datas/resource/opencart2/{{ cms_file_name }}.tar"
    dest: "/datas/resource/opencart2/"
    owner: apache
    group: apache
    mode: 0777
    copy: no

- name: 解压 opencart源码包
  unarchive:
    src: "/datas/resource/opencart2/{{ cms_file_name }}/code.tar"
    dest: "/datas/www/{{ domain }}"
    owner: apache
    group: apache
    mode: 0777
    copy: no

- name: 导入sql文件
  community.mysql.mysql_db:
    state: import
    name: "{{ database_name }}"
    login_host: "{{ db_login_host }}"
    login_user: "{{ database_user }}"
    login_password: "{{ database_password }}"
    login_port: "{{ database_port }}"
    target: "/datas/resource/opencart2/{{ cms_file_name }}/database.sql"
  vars:
    ansible_python_interpreter: "/venv/bin/python3"


- name: 修改admin config
  template:
    src: templates/opencart2/backend_config.php
    dest: "/datas/www/{{ domain }}/{{ admin_dir }}/config.php"
    mode: '0644'

- name: 修改admin config
  template:
    src: templates/opencart2/front_config.php
    dest: "/datas/www/{{ domain }}/config.php"
    mode: '0644'

- name: 创建link图片目录
  file:
    src: "/datas/images"
    dest: "/datas/www/{{ domain }}/image/catalog/share_images"
    mode: 0777
    state: link

- name: 生成nginx 配置文件
  template:
    src: templates/site.conf
    dest: "/etc/nginx/conf.d/{{domain}}.conf"
    mode: '0644'
  vars:
    root_path: "/datas/www/{{domain}}"
    site_port: "{{nginx_site_port}}"
    server_name: "{{domain}}"
    nginx_fastcgi_pass: "{{ php_fastcgi_pass }}"
    rewrite_rule: "{{ nginx_rewrite_rule}}"

- name: 重新启动nginx
  service: name=nginx state=restarted


